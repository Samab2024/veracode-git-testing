# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
# This is an example of using VeraDemo Java test application with the Veracode Static Pipeline scanner.  A Veracode subscription is required.
trigger:
- main
pool:
  name: default
steps:
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      VERACODE_WRAPPER_VERSION=$(curl -sS "https://search.maven.org/solrsearch/select?q=g:%22com.veracode.vosp.api.wrappers%22&rows=20&wt=json" | jq -r '.response.docs[0].latestVersion') && curl -sS -o veracode-wrapper.jar "https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/${VERACODE_WRAPPER_VERSION}/vosp-api-wrappers-java-${VERACODE_WRAPPER_VERSION}.jar"
      java -jar VeracodeJavaAPI.jar -credprofile default -action PromoteSandbox -buildid 28649112
# - task: Maven@3
#   displayName: Build with Maven
#   inputs:
#     mavenPomFile: 'app/pom.xml'
#     mavenOptions: '-Xmx3072m'
#     javaHomeOption: 'JDKVersion'
#     jdkVersionOption: '1.8'
#     jdkArchitectureOption: 'x64'
#     publishJUnitResults: true
#     testResultsFiles: '**/surefire-reports/TEST-*.xml'
#     goals: 'package'

# - task: Veracode@3
#   inputs:
#     ConnectionDetailsSelection: 'Service Connection'
#     AnalysisService: 'Veracode API'
#     veracodeAppProfile: 'Test_ADO'
#     version: '$(build.buildNumber)'
#     filepath: 'app/target/verademo.war'
#     optargs: '-include *.dll -exclude *.exe,*.sys,*.xlsm -deleteincompletescan 1'
#     createProfile: true
#     importResults: true
#     maximumWaitTime: '60'

# - task: Veracode@3
#   inputs:
#     ConnectionDetailsSelection: 'Service Connection'
#     AnalysisService: 'Veracode API'
#     veracodeAppProfile: 'Two_Apps_2'
#     version: '$(build.buildNumber)'
#     filepath: 'app/target/verademo.war'
#     optargs: '-deleteincompletescan 2'
#     createProfile: true
#     importResults: true
#     maximumWaitTime: '60'